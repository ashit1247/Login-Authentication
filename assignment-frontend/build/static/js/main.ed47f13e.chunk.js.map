{"version":3,"sources":["App/Common/Hooks/useInput.js","API/config.js","API/services.js","App/Auth/Register.js","App/Auth/Login.js","Components/Unstated/withStore.js","Store/mainStore.js","App/Main/Landing/index.js","App/Main/Landing/BookingPage.js","App/Common/PrivateRoute.js","App/Main/App.js","serviceWorker.js","index.js","Helpers/Stores/linkedStores.js"],"names":["useInput","initialValue","useState","value","setValue","reset","bind","onChange","event","target","HTTP","axios","create","baseURL","process","REACT_APP_BASEURL","headers","loginUser","data","post","JSON","stringify","then","res","status","catch","error","registerUser","bookUser","Register","history","username","bindusername","resetusername","email","bindemail","resetemail","password","bindpassword","resetpassword","setProgress","handleSubmit","evt","a","preventDefault","name","result","alert","localStorage","setItem","push","className","to","onSubmit","type","placeholder","Login","inProgress","handleLogin","disabled","mapContainers","containers","extractor","reduce","obj","item","index","charAt","toLowerCase","slice","parseProps","map","key","split","get","merged","current","withStore","WrappedComponent","props","MainStore","state","loading","user","mainLoading","init","userAllData","parse","getItem","setState","setActiveContent","console","log","bindStore","store","linkedStores","Container","useStyles","makeStyles","theme","cardGrid","paddingTop","spacing","paddingBottom","icon","marginRight","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","mainStore","classes","setLoading","setData","useEffect","fetchData","handlePage","fac","CircularProgress","position","Toolbar","Typography","variant","color","noWrap","maxWidth","Grid","container","_id","xs","sm","md","CssBaseline","onClick","Card","CardMedia","image","img","title","CardContent","gutterBottom","component","facData","document","getElementById","slot","token","facId","success","msg","id","defaultValue","style","label","s","PrivateRoute","Component","rest","render","isLogin","exact","path","Landing","BookingPage","Boolean","window","location","hostname","match","stores","Object","keys","ReactDOM","inject","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed47f13e.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport const useInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n\n  return {\n    value,\n    setValue,\n    reset: () => setValue(\"\"),\n    bind: {\n      value,\n      onChange: event => {\n        setValue(event.target.value);\n      }\n    }\n  };\n};","import axios from \"axios\";\n\nexport const HTTP = axios.create({\n  baseURL: process.env.REACT_APP_BASEURL\n});\n","import { HTTP } from \"./config.js\";\nconst headers = {\n  \"Content-Type\": \"application/json\"\n};\n\nexport const getFacility = () =>\nHTTP.get(\"api/fac\")\n    .then(res => {\n      return res.data;\n    })\n    .catch(error => {\n      return;\n    });\n\nexport const loginUser = data =>\n  HTTP.post(\"users/login\", JSON.stringify(data), {\n    headers: headers\n  })\n    .then(res => {\n      if (res.status === 200) {\n        return res.data;\n      }else {\n          return \"error\";\n        }\n      })\n    .catch(error => {\n      return \"error\";\n    });\n\nexport const registerUser = data =>\n  HTTP.post(\"users/register\", JSON.stringify(data), {\n    headers: headers\n  })\n    .then(res => {\n      if (res.status === 201) {\n        return res.data;\n      }else {\n          return \"error\";\n        }\n    })\n    .catch(error => {\n      return \"error\";\n    });\n\nexport const bookUser = data =>\n  HTTP.post(\"api/book\", JSON.stringify(data), {\n    headers: headers\n  })\n    .then(res => {\n      if (res.status === 200) {\n        return res.data;\n      }else {\n          return \"error\";\n        }\n    })\n    .catch(error => {\n      return \"error\";\n    });","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useInput } from \"../Common/Hooks/useInput\";\nimport { registerUser } from \"../../API/services\";\nconst Register = ({history}) => {\n  const {\n    value: username,\n    bind: bindusername,\n    reset: resetusername\n  } = useInput(\"\");\n  const { value: email, bind: bindemail, reset: resetemail } = useInput(\"\");\n  const {\n    value: password,\n    bind: bindpassword,\n    reset: resetpassword\n  } = useInput(\"\");\n  const [inProgress, setProgress] = useState(false);\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    setProgress(true);\n    const data = { email, password, name: username };\n    const result = await registerUser(data);\n    if (result === \"error\") {\n      setProgress(false);\n      return alert(result);\n    }\n    localStorage.setItem(\"user\", JSON.stringify(result.data));\n    resetemail();\n    resetpassword();\n    resetusername();\n    setProgress(false);\n    history.push(\"/main\");\n  };\n  return (\n    <div className=\"auth-page\">\n      <div className=\"container page\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3 col-xs-12\">\n            <h1 className=\"text-xs-center\">Sign Up</h1>\n            <p className=\"text-xs-center\">\n              <Link to=\"/login\">Have an account?</Link>\n            </p>\n\n            <form onSubmit={handleSubmit}>\n              <fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    className=\"form-control form-control-lg\"\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    {...bindusername}\n                  />\n                </fieldset>\n\n                <fieldset className=\"form-group\">\n                  <input\n                    className=\"form-control form-control-lg\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    {...bindemail}\n                  />\n                </fieldset>\n\n                <fieldset className=\"form-group\">\n                  <input\n                    className=\"form-control form-control-lg\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    {...bindpassword}\n                  />\n                </fieldset>\n\n                <button\n                  className=\"btn btn-lg btn-primary pull-xs-right\"\n                  type=\"submit\"\n                >\n                  Sign up\n                </button>\n              </fieldset>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","import { Link } from \"react-router-dom\";\nimport React, {useState} from \"react\";\nimport { useInput } from \"../Common/Hooks/useInput\";\nimport { loginUser } from \"../../API/services\"\nconst Login = ({history}) => {\n    const {\n        value: email,\n        bind: bindemail,\n        reset: resetemail,\n      } = useInput(\"\");\n      const {\n        value: password,\n        bind: bindpassword,\n        reset: resetpassword,\n      } = useInput(\"\");\n      const [inProgress,setProgress] = useState(false);\n      const handleLogin = async (evt) => {\n        evt.preventDefault();\n        setProgress(true);\n        const data ={email,password};\n        const result = await loginUser(data);\n        if(result===\"error\") {\n          setProgress(false);\n          return alert(result);\n        }\n        localStorage.setItem(\"user\",JSON.stringify(result.data));\n        resetemail();\n        resetpassword();\n        setProgress(false);\n        history.push(\"/main\");\n    }\n  return (\n    <div className=\"auth-page\">\n      <div className=\"container page\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3 col-xs-12\">\n            <h1 className=\"text-xs-center\">Sign In</h1>\n            <p className=\"text-xs-center\">\n              <Link to=\"/register\">Need an account?</Link>\n            </p>\n\n            <form onSubmit={handleLogin}>\n              <fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    className=\"form-control form-control-lg\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    {...bindemail}\n                  />\n                </fieldset>\n\n                <fieldset className=\"form-group\">\n                  <input\n                    className=\"form-control form-control-lg\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    {...bindpassword}\n                  />\n                </fieldset>\n\n                <button\n                  className=\"btn btn-lg btn-primary pull-xs-right\"\n                  type=\"submit\"\n                  disabled={inProgress}\n                >\n                  Sign in\n                </button>\n              </fieldset>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Subscribe } from \"unstated\";\nimport get from \"get-value\";\n\nconst withStore = (containers, extractor) => WrappedComponent => props => (\n  <Subscribe to={containers}>\n    {(...containers) => (\n      <WrappedComponent {...mapContainers(containers, extractor)} {...props} />\n    )}\n  </Subscribe>\n);\n\nconst mapContainers = (containers, extractor = []) =>\n  containers.reduce((obj, item, index) => {\n    const name = item.name.charAt(0).toLowerCase() + item.name.slice(1);\n    obj[name] = extractor[index] ? parseProps(item, extractor[index]) : item;\n    return obj;\n  }, {});\n\nconst parseProps = (item, extractor = []) =>\n  extractor\n    .map(key => ({\n      [key.split(\".\").slice(-1)[0]]: get(item, key)\n    }))\n    .reduce((merged, current) => ({ ...merged, ...current }));\n\nexport default withStore;\n","import { Container } from \"unstated\";\n\nconst initialstate = () => ({\n    loading: true,\n    data: null,\n    user: null,\n    mainLoading: true\n});\n\nexport default class MainStore extends Container {\n    state = initialstate();\n    name = \"MainStore\";\n    init = async () => {\n        const userAllData = JSON.parse(localStorage.getItem(\"user\"));\n        await this.setState({user:userAllData,mainLoading:false})\n    };\n    setActiveContent = async (data) => {\n        console.log(\"fac\",data)\n        await this.setState({\n            data,\n            loading: false\n        });\n    };\n    bindStore = (store) => {\n        this.linkedStores[store.name] = store;\n    };\n}\n","import React, { useEffect, useState } from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar/AppBar\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CategoryIcon from \"@material-ui/icons/Category\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { getFacility } from \"../../../API/services\";\nimport withStore from \"../../../Components/Unstated/withStore\";\nimport MainStore from \"../../../Store/mainStore\";\nconst Landing = ({ mainStore: { init, setActiveContent }, history }) => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await getFacility();\n      // console.log(result);\n      setData(result);\n      setLoading(false);\n    };\n    init();\n    fetchData();\n  }, []);\n  const handlePage = async fac => {\n    await setActiveContent(fac);\n    history.push(\"/book\");\n  };\n  return loading ? (\n    <CircularProgress />\n  ) : (\n    <div>\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <CategoryIcon />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Category\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        <Grid container spacing={4}>\n          {data.map(fac => (\n            <Grid item key={\"album\" + fac._id} xs={12} sm={6} md={4}>\n              <CssBaseline />\n              <main onClick={() => handlePage(fac)}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image={fac.img}\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {fac.title}\n                    </Typography>\n                    <Typography>\n                      This is a media card. You can use this section to describe\n                      the content.\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </main>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\nconst useStyles = makeStyles(theme => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4)\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\" // 16:9\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  }\n}));\n\nexport default withStore([MainStore])(Landing);\n","import React, { useEffect, useState } from \"react\";\nimport { bookUser } from \"../../../API/services\";\nimport withStore from \"../../../Components/Unstated/withStore\";\nimport MainStore from \"../../../Store/mainStore\";\nimport { CircularProgress } from \"@material-ui/core\";\nconst BookingPage = ({\n  history,\n  mainStore: {\n    state: { user, data : facData, loading }\n  }\n}) => {\n  const slots = [\n    { value: \"10-12\", label: \"10 am - 12 am\" },\n    { value: \"12-14\", label: \"12 am - 2 pm\" },\n    { value: \"14-16\", label: \"2 pm - 4 pm\" },\n    { value: \"16-18\", label: \"4 pm - 6 pm\" },\n    { value: \"18-20\", label: \"6 pm - 8 pm\" }\n  ];\n  const [inProgress, setProgress] = useState(false);\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    setProgress(true);\n    const email = document.getElementById(`booking-email`).value;\n    const slot = document.getElementById(`booking-slot`).value;\n    const data = { email, token: user.token, slot, facId: facData._id };\n    const result = await bookUser(data);\n    console.log(result)\n    if (!result.success) {\n      setProgress(false);\n      return alert(result.msg);\n    }\n    if(result === \"error\"){\n      setProgress(false);\n      return alert(result);\n    }\n    setProgress(false);\n    // localStorage.setItem(\"user\", JSON.stringify(result.data));\n    document.getElementById(`booking-email`).value = \"\";\n    document.getElementById(`booking-slot`).value = \"\";\n    // history.push(\"/main\");\n    return alert(result.msg);\n  };\n  useEffect(() => {\n    if (!facData) history.push(\"/main\");\n  }, []);\n  // console.log(\"data\",data)\n  return loading ? (\n    <CircularProgress />\n  ) : (\n    <div className=\"auth-page\">\n      <div className=\"container page\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3 col-xs-12\">\n            <h1 className=\"text-xs-center\">Booking for {facData.title}</h1>\n            {/*<p className=\"text-xs-center\">*/}\n            {/*  <Link to=\"/login\">Have an account?</Link>*/}\n            {/*</p>*/}\n\n            <form onSubmit={handleSubmit}>\n              <fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    id={\"booking-email\"}\n                    className=\"form-control form-control-lg\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    defaultValue={user.email}\n                  />\n                </fieldset>\n                <fieldset className={\"form-group\"}>\n                  <label>Slot</label>\n                  <select\n                    style={{\n                      paddingBottom: \"5px\"\n                    }}\n                    type=\"text\"\n                    placeholder=\"Please enter a Slot\"\n                    className=\"form-control form-control-lg\"\n                    id={`booking-slot`}\n                  >\n                    <option disabled>Please Choose A Slot</option>\n                    {slots.map(s => (\n                      <option value={s.value}>{s.label}</option>\n                    ))}\n                  </select>\n                </fieldset>\n                <button\n                  className=\"btn btn-lg btn-primary pull-xs-right\"\n                  type=\"submit\"\n                  disabled={inProgress}\n                >\n                  Submit\n                </button>\n              </fieldset>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withStore([MainStore])(BookingPage);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const isLogin = () => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if(user){\n        const token = user.token;\n        if (token) return true;\n    }\n    return false;\n  };\n  return (\n\n    <Route\n      {...rest}\n      render={props =>\n        isLogin() ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, {useEffect} from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Register from \"../Auth/Register\"\nimport Login from \"../Auth/Login\"\nimport Landing from \"./Landing\"\nimport BookingPage from \"./Landing/BookingPage\";\nimport PrivateRoute from \"../Common/PrivateRoute\";\nimport withStore from \"../../Components/Unstated/withStore\";\nimport MainStore from \"../../Store/mainStore\";\n\nconst App = ({mainStore: {init,state: {mainLoading}}}) => {\n    useEffect( ()=> {\n        init();\n    },[])\n    return mainLoading ? (\n      <div>loading....</div>\n    ) : (\n      <div className={\"App\"}>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Register} />\n            <PrivateRoute exact path=\"/main\" component={Landing} />\n            <Route exact path=\"/login\" component={Login} />\n            <PrivateRoute exact path=\"/book\" component={BookingPage} />\n            <Route exact path=\"*\" component={Register} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n};\n\n\nexport default withStore([MainStore])(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nimport { showInstallPrompt } from \"./ServiceWorker/Helpers/InstallPrompt\";\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              showInstallPrompt();\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"unstated\";\nimport App from \"./App/Main/App\";\nimport { linkedStores } from \"./Helpers/Stores/linkedStores\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./Styles/index.sass\";\n\n\nconst stores = linkedStores();\n\n\nReactDOM.render(\n        <Provider inject={stores}>\n            <App />\n        </Provider>\n    ,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n\n","export const linkedStores = () => {\n  // Create instances of all stores which need linking here\n\n  const stores = {};\n\n  //Link all the stores\n\n  return Object.keys(stores).map(key => stores[key]);\n};\n"],"sourceRoot":""}